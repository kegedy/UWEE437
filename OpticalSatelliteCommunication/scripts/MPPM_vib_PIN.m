function Pb = MPPM_vib_PIN(Pmax, Pmin, var_theta, Br, M, Id, Pback, Rl,...
Tr, n, lambda, Dt, Dr, nt, nr, d, Lil)

% Solves the double integral that evaluates the mean BER for a certain
% standard deviation of the pointing jitter.

Pb = 0;
for theta_r = 0:2*10^-6:10^-4
	P = 0;
	for theta_t = 0:2*10^-6:10^-4
		P = P + P_MPPM_theta(Pmax, Pmin, Br, M, Id, Pback, Rl, Tr, n,...
		lambda, Dt, Dr, nt, nr, d, theta_t, theta_r, Lil)*...
		raylpdf(theta_t,var_theta)*(2*10^-6);
	end
	Pb = Pb + P*raylpdf(theta_r, var_theta)*(2*10^-6);
end

end

% Gives the BER for a certain transmitter and receiver pointing error.

function P_MPPM = P_MPPM_theta(Pmax, Pmin, Br, M, Id, Pback, Rl, Tr, n,...
lambda, Dt, Dr, nt, nr, d, theta_t, theta_r, Lil)

Pr1 = Pmax...
	*Pointing(Ap_G(Dt, lambda, nt), theta_t)...
	*Ap_G(Dt, lambda, nt)...
	*SpaceLoss(lambda, d)...
	*Pointing(Ap_G(Dr, lambda, nr), theta_r)...
	*Ap_G(Dr, lambda, nr)...
	*10^(-Lil/10);

Pr0 = Pmin...
	*Pointing(Ap_G(Dt, lambda, nt), theta_t)...
	*Ap_G(Dt, lambda, nt)...
	*SpaceLoss(lambda, d)...
	*Pointing(Ap_G(Dr, lambda, nr), theta_r)...
	*Ap_G(Dr, lambda, nr)...
	*10^(-Lil/10);

[Xs, varXs, Xns, varXns, SNR] = meanvar_PIN(Pr1, Pr0, M, Br, Id, Pback,...
	Rl, Tr, n, lambda);

P_MPPM = PPM(Xs, Xns, varXs, varXns, M);

end
